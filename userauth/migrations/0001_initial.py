# Generated by Django 4.2.8 on 2023-12-21 20:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('bellscrm_admin', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('last_visited', models.DateTimeField(default=django.utils.timezone.now)),
                ('gender', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], max_length=20, null=True)),
                ('is_account_approved_by_admin', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(db_index=True, default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Persons',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('preferred_name', models.CharField(blank=True, max_length=100, null=True)),
                ('date_of_birth', models.DateField()),
                ('fix_line', models.CharField(blank=True, max_length=20, null=True)),
                ('residential_address', models.TextField(blank=True, null=True)),
                ('fund_management_by', models.CharField(blank=True, max_length=50, null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_company', to='bellscrm_admin.company')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Client',
                'verbose_name_plural': 'Clients',
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('role', models.IntegerField(choices=[(1, 'Admin'), (2, 'Manager'), (3, 'Employee')], default=3)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employees', to='bellscrm_admin.company')),
                ('person', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employee', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
            },
        ),
        migrations.CreateModel(
            name='ClientNDISDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_individual_ndis_participant', models.IntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('is_any_service_agreements', models.IntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('is_any_consents_obtained', models.IntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('plan_start_date', models.DateField(blank=True, null=True)),
                ('plan_end_date', models.DateField(blank=True, null=True)),
                ('plan_goals_and_objectives', models.TextField(blank=True, null=True)),
                ('plan_funding_allocation', models.TextField(blank=True, null=True)),
                ('participant_number', models.CharField(blank=True, max_length=50, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ndis_details', to='userauth.client')),
            ],
            options={
                'verbose_name': 'ClientNDISDetail',
                'verbose_name_plural': 'ClientNDISDetails',
            },
        ),
        migrations.CreateModel(
            name='ClientMedicalDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_any_disabilities', models.IntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('primary_disability', models.TextField(blank=True, null=True)),
                ('secondary_disability', models.TextField(blank=True, null=True)),
                ('medical_history', models.TextField(blank=True, null=True)),
                ('is_any_medication', models.IntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('medication_details', models.TextField(blank=True, null=True)),
                ('doctor_consent', models.IntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('allergies_and_sensitives', models.TextField(blank=True, null=True)),
                ('healthcare_provider_info', models.TextField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_details', to='userauth.client')),
            ],
            options={
                'verbose_name': 'ClientMedicalDetail',
                'verbose_name_plural': 'ClientMedicalDetails',
            },
        ),
        migrations.CreateModel(
            name='ClientEmergencyDetail',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(blank=True, max_length=100, null=True)),
                ('updated_by', models.CharField(blank=True, max_length=100, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('emergency_name', models.CharField(blank=True, max_length=50, null=True)),
                ('emergency_fix_line', models.CharField(blank=True, max_length=50, null=True)),
                ('emergency_phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('emergency_mail', models.EmailField(blank=True, max_length=254, null=True)),
                ('emergency_person_gender', models.IntegerField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], null=True)),
                ('is_authorised_representative', models.IntegerField(choices=[(1, 'Yes'), (0, 'No')], default=0)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emergency_contact_details', to='userauth.client')),
            ],
            options={
                'verbose_name': 'ClientEmergencyDetail',
                'verbose_name_plural': 'ClientEmergencyDetails',
            },
        ),
    ]
